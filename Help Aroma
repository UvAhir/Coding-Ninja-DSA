Help Aroma
Send Feedback
Teaching Assistants at Coding Ninjas are working day and night for resolving doubts of students. On a particular day, Aroma had solved lot of doubts. There is still one left unsolved, so, she is asking for help.
The description of the doubt is - "Help me solve this question."
The question is described as - "You are given a word M and K queries. In every query, there are four integers: W, X, Y and Z. Let us form another word P by the characters at positions: [W, X] of a given word M (characters at position W and X are inclusive). Let us form another word Q by the characters at positions [Y, Z] of the given word M (characters at positions Y and Z are inclusive). For every query, you must answer if it is possible to rearrange the letters of word Q and form word P."
Your task is to help Aroma and write code for this problem.
Input Format:
The first line of input contains the string M. The length of string M lies in the range: [1, 50000]. String M consists only of lowercase letters of English alphabet. The second line of input contains an integer, that denotes the value of K (1 <= K <= 50000). Each of the following K lines contains four integers: W, X, Y, Z. (1 <= W, X <= |M| and 1 <= Y, Z <= |M|).
Constraints:
Time Limit: 1 second
Output Format:
There are K lines of output, one for each query. For each query, print "true" if it possible and "false" otherwise.   
Sample Input 1:
navdeepdvan
2
1 4 8 11
4 5 7 8
Sample Output 1:
true
false
Explanation:
In the first query, the word formed are: P is "navd" and Q is "dvan". Hence, true.
In the second query, the word formed are: P is "de" and Q is "pd". Hence, false.

*********************************************************************

import java.util.Scanner;

public class Main {

	
	public static void main(String[] args) {
		/* Your class should be named Main.
 			* Read input as specified in the question.
 			* Print output as specified in the question.
		*/

		// Write your code here
		
        Scanner sc = new Scanner(System.in);
        String word = sc.next();
        
        int k = sc.nextInt();
        
        int[][] arr = new int[word.length()+1][26];
        
        for(int i=1;i<=word.length();i++){
            for(int j=0;j<26;j++){
                arr[i][j] = arr[i-1][j];
            }
            arr[i][word.charAt(i-1)-'a']++;
        }
        
        for(int i=0;i<k;i++){
            int a = sc.nextInt();
            int b = sc.nextInt();
            int c = sc.nextInt();
            int d = sc.nextInt();
            boolean check = true;
            for(int j=0;j<26;j++){
                if(arr[a-1][j]-arr[b][j] != arr[c-1][j]-arr[d][j]){
                    check = false;
                    break;
                }
            }
            
            System.out.println(check);
        }
        
	}
   
}
